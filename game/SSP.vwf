/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("col_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("col_in[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "col_in";
}

SIGNAL("col_in[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "col_in";
}

SIGNAL("col_in[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "col_in";
}

SIGNAL("col_in[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "col_in";
}

SIGNAL("col_matrix")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("col_matrix[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("col_matrix[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("col_matrix[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("col_matrix[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("col_matrix[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("col_matrix[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("col_matrix[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("col_matrix[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "col_matrix";
}

SIGNAL("digitron_cat")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("digitron_cat[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_cat";
}

SIGNAL("digitron_cat[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_cat";
}

SIGNAL("digitron_cat[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_cat";
}

SIGNAL("digitron_cat[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_cat";
}

SIGNAL("digitron_cat[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_cat";
}

SIGNAL("digitron_cat[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_cat";
}

SIGNAL("digitron_show")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("digitron_show[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_show";
}

SIGNAL("digitron_show[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_show";
}

SIGNAL("digitron_show[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_show";
}

SIGNAL("digitron_show[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_show";
}

SIGNAL("digitron_show[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_show";
}

SIGNAL("digitron_show[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_show";
}

SIGNAL("digitron_show[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "digitron_show";
}

SIGNAL("row_matrix")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("row_matrix[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_matrix[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_matrix[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_matrix[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_matrix[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_matrix[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_matrix[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_matrix[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_matrix";
}

SIGNAL("row_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("row_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_out";
}

SIGNAL("row_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_out";
}

SIGNAL("row_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_out";
}

SIGNAL("row_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "row_out";
}

TRANSITION_LIST("clk_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2000;
			LEVEL 0 FOR 250.0;
			LEVEL 1 FOR 250.0;
		}
	}
}

TRANSITION_LIST("col_in[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6400.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 7040.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 23680.0;
		LEVEL 1 FOR 6400.0;
		LEVEL 0 FOR 41120.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 7040.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 71200.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3200.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 3040.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 2880.0;
			LEVEL 0 FOR 7040.0;
			LEVEL 1 FOR 4160.0;
			LEVEL 0 FOR 71200.0;
		}
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 7040.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 64800.0;
	}
}

TRANSITION_LIST("col_in[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3040.0;
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 8800.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 7040.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 67840.0;
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 8800.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 7040.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 67840.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2720.0;
			LEVEL 0 FOR 8800.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 2880.0;
			LEVEL 0 FOR 7040.0;
			LEVEL 1 FOR 4160.0;
			LEVEL 0 FOR 67840.0;
		}
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 8800.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 7040.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 64800.0;
	}
}

TRANSITION_LIST("col_in[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3040.0;
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 34880.0;
		LEVEL 1 FOR 6400.0;
		LEVEL 0 FOR 37760.0;
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 79040.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2720.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 3200.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 3040.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 2880.0;
			LEVEL 0 FOR 79040.0;
		}
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 76000.0;
	}
}

TRANSITION_LIST("col_in[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3040.0;
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 10880.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 23680.0;
		LEVEL 1 FOR 6400.0;
		LEVEL 0 FOR 37760.0;
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 10880.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 67840.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2720.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 3200.0;
			LEVEL 0 FOR 960.0;
			LEVEL 1 FOR 3040.0;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 10880.0;
			LEVEL 1 FOR 4160.0;
			LEVEL 0 FOR 67840.0;
		}
		LEVEL 1 FOR 2720.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3040.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 10880.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 64800.0;
	}
}

TRANSITION_LIST("col_matrix[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 1280.0;
		NODE
		{
			REPEAT = 389;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 320.0;
	}
}

TRANSITION_LIST("col_matrix[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 640.0;
		NODE
		{
			REPEAT = 780;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("col_matrix[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		NODE
		{
			REPEAT = 1561;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("col_matrix[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 3124;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
	}
}

TRANSITION_LIST("col_matrix[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 6249;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("col_matrix[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12498;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("col_matrix[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 24998;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("col_matrix[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 49997;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("digitron_cat[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		NODE
		{
			REPEAT = 1561;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("digitron_cat[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 3124;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
	}
}

TRANSITION_LIST("digitron_cat[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 6249;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("digitron_cat[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12498;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("digitron_cat[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 24998;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("digitron_cat[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 49997;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("digitron_show[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 640.0;
		NODE
		{
			REPEAT = 780;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("digitron_show[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 320.0;
		NODE
		{
			REPEAT = 1561;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("digitron_show[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 3124;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
	}
}

TRANSITION_LIST("digitron_show[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 6249;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("digitron_show[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12498;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("digitron_show[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 24998;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("digitron_show[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 49997;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("row_matrix[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 390;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 320.0;
	}
}

TRANSITION_LIST("row_matrix[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 781;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("row_matrix[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1562;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("row_matrix[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3125;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
	}
}

TRANSITION_LIST("row_matrix[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 6250;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("row_matrix[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 12500;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("row_matrix[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 25000;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("row_matrix[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("row_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 131;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 2960.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 6099;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("row_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 262;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 2920.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 12199;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("row_out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 526;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 2900.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 24399;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("row_out[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 1053;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 2890.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 48799;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "col_in";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "col_in[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "col_in[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "col_in[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "col_in[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "row_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "row_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "row_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "row_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "row_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_cat";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_cat[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_cat[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_cat[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_cat[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_cat[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_cat[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "digitron_show[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "col_matrix[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40, 41, 42, 43;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "row_matrix[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 35;
}

TIME_BAR
{
	TIME = 7280000;
	MASTER = TRUE;
}
;
