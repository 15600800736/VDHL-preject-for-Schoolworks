
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;	
entity SSP is
	port(
		clk_in:in std_logic;
		col_button_in:in std_logic_vector(3 downto 0);
		row_button_out:out std_logic_vector(3 downto 0);
		start_out,ready_out,show_out,a_ok_out,b_ok_out:out std_logic;
		a_select_out,b_select_out:out integer range 0 to 2
		);
end SSP;

architecture behave of SSP is
	component button is
			port(
			clk_in_b:in std_logic;
			col_in_b:in std_logic_vector(3 downto 0);
			start_out_b,ready_out_b,show_out_b,a_ok_out_b,b_ok_out_b:out std_logic;
			a_select_out_b,b_select_out_b:out integer range 0 to 2;
			row_out_b:out std_logic_vector(3 downto 0)
			);
	end component;
	component prevent_shake is
			port(
			clk_in_p:in std_logic;
			start_in_p,ready_in_p,show_in_p,a_ok_in_p,b_ok_in_p:in std_logic;
			a_select_in_p,b_select_in_p:in integer range 0 to 2;
			start_out_p,ready_out_p,show_out_p,a_ok_out_p,b_ok_out_p:out std_logic;
			a_select_out_p,b_select_out_p:out integer range 0 to 2
			);
	end component;
	component frequency_division is
		port(
			clk_in_f:in std_logic;
			clk_out_f:out std_logic
			);
	end component;
	signal start_out_tmp,ready_out_tmp,show_out_tmp,a_ok_out_tmp,b_ok_out_tmp:std_logic;
	signal a_select_out_tmp,b_select_out_tmp:integer range 0 to 2;
	signal clk_out:std_logic;
	begin
		U1:frequency_division port map(clk_in,clk_out);
		U2:button port map(clk_out,col_button_in,start_out_tmp,ready_out_tmp,show_out_tmp,a_ok_out_tmp,b_ok_out_tmp,a_select_out_tmp,b_select_out_tmp,row_button_out);
		U3:prevent_shake port map(clk_in,start_out_tmp,ready_out_tmp,show_out_tmp,a_ok_out_tmp,b_ok_out_tmp,a_select_out_tmp,b_select_out_tmp,start_out,ready_out,show_out,a_ok_out,b_ok_out,a_select_out,b_select_out);
end behave;